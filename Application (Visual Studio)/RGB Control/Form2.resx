<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAA0hJREFUaEPV2cvLDWEcB3B3GxKRlFwiZWWhSEkWklgrNpRsXErxB5BLWLhEyW2N
        xIoFSihFUS4bSqQoJblEcj++X+Z7es683zPzzDPv22m+9cmc3/Ob3ufNzJzfec+gVqvVaLbYJLbYJLbY
        JLbYT8bDMlgE47Jav7PFmobBPvgGylfYD1xz5ySzxZoOQrccBXdOMlusYT78AeUO3P1/+C9cY487N4kt
        1nATlAugOo8V9oTn1GKLiVaA8gNmgtamw3dQlkN4bjJbTDAEHoByBPI9vP6Vx8Bz8j2V2WKCtaB8homQ
        75kAn0BZA/meymyxohHwHJTt4PpoBygvYSS4vmi2WNE2UN7CaHB9NAregLIVXF80W6xgDLwDZRO4vtBm
        UN7DWHB9UWyxgj2gvABeTq4vNByegbIbXF8UW4w0Cb6Asgry68dgL8zIarIaFI4ZkyFcj2aLkU6A8hDy
        j0W+Cyu3IVwbDPdBOQ7hejRbjDALfoKyBMJ1Xia/QOEIkb+8FoPC3tkQrkexxQgXQbkKrif8BXnseq6B
        Eo4e0WyxxDzQwMZ/54Lr+wjKB3A9c+A3KAvA9XVliyWug3IGXA+9BuUVuB46C8otcD1d2WKBooEt7yko
        T8D1UK1Bzxa7iBnYQuFT5h64Hkke9Gyxi5iBLRR+NrgBrkeSBz1bNKoMbHIZlEvgekJJg54tGlUGNjkH
        Cm9U1xNKGvRsMSdlYKPToJwC15NXedCzxZyUgY0Og3IIXE9e5UHPFgNlA1uRnaDw2PU4lQY9WwyUDWxF
        OOtwhCAeux6n0qBni5mygS3G1IxbKxI96NliJmZgG0hRg54tQuzAVoQ3+/pM7I0fihr0+hQysQNbET46
        lZPgesqUDnp9ClBlYCvCmUZ5BK6nTOmg1/EC+ATgD1Pq/DWZb3i8/HgZbMxqKcJBj3vjHtvrYSPxywgl
        ZmArMy3j1mJxD9yLshDa62EjbQEl+YP2AOA9pGyA9lrYROtAuQId/109wj3wMa5wj+31sJGmAG9che+I
        53ssfFfm/cQbu73ncPNS9BVRr3MAOvbb8SLDL+J2QTjE9Toc6vghaih07LfjRQ5ncc4/K3tsKXT9XGCL
        TWKLTWKLTWKLzdEa9Bd9zYO4Ioo39QAAAABJRU5ErkJggg==
</value>
  </data>
</root>